// Generated from /Users/tomaandrei/Facultate/CPL/tema2/Tema2/src/cool/lexer/CoolLexer.g4 by ANTLR 4.10.1

    package cool.lexer;	

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, CLASS=2, ELSE=3, FALSE=4, FI=5, IF=6, IN=7, INHERITS=8, ISVOID=9, 
		LET=10, LOOP=11, POOL=12, THEN=13, WHILE=14, CASE=15, ESAC=16, NEW=17, 
		OF=18, NOT=19, TRUE=20, TYPE=21, ID=22, INT=23, SEMI=24, COMMA=25, ASSIGN=26, 
		LPAREN=27, RPAREN=28, LBRACE=29, RBRACE=30, PLUS=31, MINUS=32, MULT=33, 
		DIV=34, COMPLEMENT=35, EQUAL=36, LT=37, LE=38, COLON=39, AT=40, DOT=41, 
		IMPLIES=42, STRING=43, LINE_COMMENT=44, BLOCK_COMMENT=45, BAD_COMMENT=46, 
		WS=47, INVALID_CHARACTER=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"CLASS", "ELSE", "FALSE", "FI", "IF", "IN", "INHERITS", "ISVOID", "LET", 
			"LOOP", "POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", "OF", "NOT", 
			"TRUE", "LETTER", "TYPE", "ID", "DIGIT", "INT", "SEMI", "COMMA", "ASSIGN", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", "MULT", "DIV", 
			"COMPLEMENT", "EQUAL", "LT", "LE", "COLON", "AT", "DOT", "IMPLIES", "STRING", 
			"NEW_LINE", "LINE_COMMENT", "BLOCK_COMMENT", "BAD_COMMENT", "WS", "INVALID_CHARACTER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"';'", "','", "'<-'", "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", 
			"'/'", "'~'", "'='", "'<'", "'<='", "':'", "'@'", "'.'", "'=>'", null, 
			null, null, "'*)'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "CLASS", "ELSE", "FALSE", "FI", "IF", "IN", "INHERITS", 
			"ISVOID", "LET", "LOOP", "POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", 
			"OF", "NOT", "TRUE", "TYPE", "ID", "INT", "SEMI", "COMMA", "ASSIGN", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", "MULT", "DIV", 
			"COMPLEMENT", "EQUAL", "LT", "LE", "COLON", "AT", "DOT", "IMPLIES", "STRING", 
			"LINE_COMMENT", "BLOCK_COMMENT", "BAD_COMMENT", "WS", "INVALID_CHARACTER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 43:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 46:
			BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 47:
			BAD_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 49:
			INVALID_CHARACTER_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

			    String s = getText();
			    s = s.substring(1, s.length() - 1);
			    s = s.replaceAll("\\\\t", "\t");
			    s = s.replaceAll("\\\\n", "\n");
			    s = s.replaceAll("\\\\b", "\b");
			    s = s.replaceAll("\\\\f", "\f");
			    s = s.replaceAll("(\\\\)(.*)", "$2");
			    if (s.length() > 1024) {
			        raiseError("String constant too long");
			        return;
			    }
			    if (s.indexOf('\u0000') != -1) {
			        raiseError("String contains null character");
			        return;
			    }
			    setText(s);

			break;
		case 1:
			 raiseError("Unterminated string constant"); 
			break;
		case 2:
			 raiseError("EOF in string constant"); 
			break;
		}
	}
	private void BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:
			 skip(); 
			break;
		case 4:
			 raiseError("EOF in comment"); 
			break;
		}
	}
	private void BAD_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 5:
			 raiseError("Unmatched *)"); 
			break;
		}
	}
	private void INVALID_CHARACTER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 6:
			 raiseError("Invalid character: " + getText()); 
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u00000\u014f\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0005\u0014\u00c9\b\u0014\n\u0014\f\u0014"+
		"\u00cc\t\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0005\u0015"+
		"\u00d2\b\u0015\n\u0015\f\u0015\u00d5\t\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0004\u0017\u00da\b\u0017\u000b\u0017\f\u0017\u00db\u0001\u0018"+
		"\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d"+
		"\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!"+
		"\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001%\u0001"+
		"&\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001)\u0001)\u0001*\u0001"+
		"*\u0001*\u0001+\u0001+\u0001+\u0001+\u0001+\u0001+\u0005+\u010d\b+\n+"+
		"\f+\u0110\t+\u0001+\u0001+\u0001+\u0001+\u0001+\u0001+\u0001+\u0003+\u0119"+
		"\b+\u0001,\u0003,\u011c\b,\u0001,\u0001,\u0001-\u0001-\u0001-\u0001-\u0005"+
		"-\u0124\b-\n-\f-\u0127\t-\u0001-\u0001-\u0003-\u012b\b-\u0001-\u0001-"+
		"\u0001.\u0001.\u0001.\u0001.\u0001.\u0005.\u0134\b.\n.\f.\u0137\t.\u0001"+
		".\u0001.\u0001.\u0001.\u0001.\u0001.\u0003.\u013f\b.\u0001/\u0001/\u0001"+
		"/\u0001/\u0001/\u00010\u00040\u0147\b0\u000b0\f0\u0148\u00010\u00010\u0001"+
		"1\u00011\u00011\u0003\u010e\u0125\u0135\u00002\u0001\u0002\u0003\u0003"+
		"\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013"+
		"\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011"+
		"!\u0012#\u0013%\u0014\'\u0000)\u0015+\u0016-\u0000/\u00171\u00183\u0019"+
		"5\u001a7\u001b9\u001c;\u001d=\u001e?\u001fA C!E\"G#I$K%M&O\'Q(S)U*W+Y"+
		"\u0000[,]-_.a/c0\u0001\u0000\u0016\u0002\u0000CCcc\u0002\u0000LLll\u0002"+
		"\u0000AAaa\u0002\u0000SSss\u0002\u0000EEee\u0002\u0000FFff\u0002\u0000"+
		"IIii\u0002\u0000NNnn\u0002\u0000HHhh\u0002\u0000RRrr\u0002\u0000TTtt\u0002"+
		"\u0000VVvv\u0002\u0000OOoo\u0002\u0000DDdd\u0002\u0000PPpp\u0002\u0000"+
		"WWww\u0002\u0000UUuu\u0002\u0000AZaz\u0001\u0000AZ\u0001\u0000az\u0001"+
		"\u000009\u0003\u0000\t\n\f\r  \u015e\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000"+
		"\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000"+
		"\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M"+
		"\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000"+
		"\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000"+
		"\u0000W\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000]"+
		"\u0001\u0000\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0000a\u0001\u0000"+
		"\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0001e\u0001\u0000\u0000\u0000"+
		"\u0003k\u0001\u0000\u0000\u0000\u0005p\u0001\u0000\u0000\u0000\u0007v"+
		"\u0001\u0000\u0000\u0000\ty\u0001\u0000\u0000\u0000\u000b|\u0001\u0000"+
		"\u0000\u0000\r\u007f\u0001\u0000\u0000\u0000\u000f\u0088\u0001\u0000\u0000"+
		"\u0000\u0011\u008f\u0001\u0000\u0000\u0000\u0013\u0093\u0001\u0000\u0000"+
		"\u0000\u0015\u0098\u0001\u0000\u0000\u0000\u0017\u009d\u0001\u0000\u0000"+
		"\u0000\u0019\u00a2\u0001\u0000\u0000\u0000\u001b\u00a8\u0001\u0000\u0000"+
		"\u0000\u001d\u00ad\u0001\u0000\u0000\u0000\u001f\u00b2\u0001\u0000\u0000"+
		"\u0000!\u00b6\u0001\u0000\u0000\u0000#\u00b9\u0001\u0000\u0000\u0000%"+
		"\u00bd\u0001\u0000\u0000\u0000\'\u00c2\u0001\u0000\u0000\u0000)\u00c4"+
		"\u0001\u0000\u0000\u0000+\u00cd\u0001\u0000\u0000\u0000-\u00d6\u0001\u0000"+
		"\u0000\u0000/\u00d9\u0001\u0000\u0000\u00001\u00dd\u0001\u0000\u0000\u0000"+
		"3\u00df\u0001\u0000\u0000\u00005\u00e1\u0001\u0000\u0000\u00007\u00e4"+
		"\u0001\u0000\u0000\u00009\u00e6\u0001\u0000\u0000\u0000;\u00e8\u0001\u0000"+
		"\u0000\u0000=\u00ea\u0001\u0000\u0000\u0000?\u00ec\u0001\u0000\u0000\u0000"+
		"A\u00ee\u0001\u0000\u0000\u0000C\u00f0\u0001\u0000\u0000\u0000E\u00f2"+
		"\u0001\u0000\u0000\u0000G\u00f4\u0001\u0000\u0000\u0000I\u00f6\u0001\u0000"+
		"\u0000\u0000K\u00f8\u0001\u0000\u0000\u0000M\u00fa\u0001\u0000\u0000\u0000"+
		"O\u00fd\u0001\u0000\u0000\u0000Q\u00ff\u0001\u0000\u0000\u0000S\u0101"+
		"\u0001\u0000\u0000\u0000U\u0103\u0001\u0000\u0000\u0000W\u0106\u0001\u0000"+
		"\u0000\u0000Y\u011b\u0001\u0000\u0000\u0000[\u011f\u0001\u0000\u0000\u0000"+
		"]\u012e\u0001\u0000\u0000\u0000_\u0140\u0001\u0000\u0000\u0000a\u0146"+
		"\u0001\u0000\u0000\u0000c\u014c\u0001\u0000\u0000\u0000ef\u0007\u0000"+
		"\u0000\u0000fg\u0007\u0001\u0000\u0000gh\u0007\u0002\u0000\u0000hi\u0007"+
		"\u0003\u0000\u0000ij\u0007\u0003\u0000\u0000j\u0002\u0001\u0000\u0000"+
		"\u0000kl\u0007\u0004\u0000\u0000lm\u0007\u0001\u0000\u0000mn\u0007\u0003"+
		"\u0000\u0000no\u0007\u0004\u0000\u0000o\u0004\u0001\u0000\u0000\u0000"+
		"pq\u0005f\u0000\u0000qr\u0007\u0002\u0000\u0000rs\u0007\u0001\u0000\u0000"+
		"st\u0007\u0003\u0000\u0000tu\u0007\u0004\u0000\u0000u\u0006\u0001\u0000"+
		"\u0000\u0000vw\u0007\u0005\u0000\u0000wx\u0007\u0006\u0000\u0000x\b\u0001"+
		"\u0000\u0000\u0000yz\u0007\u0006\u0000\u0000z{\u0007\u0005\u0000\u0000"+
		"{\n\u0001\u0000\u0000\u0000|}\u0007\u0006\u0000\u0000}~\u0007\u0007\u0000"+
		"\u0000~\f\u0001\u0000\u0000\u0000\u007f\u0080\u0007\u0006\u0000\u0000"+
		"\u0080\u0081\u0007\u0007\u0000\u0000\u0081\u0082\u0007\b\u0000\u0000\u0082"+
		"\u0083\u0007\u0004\u0000\u0000\u0083\u0084\u0007\t\u0000\u0000\u0084\u0085"+
		"\u0007\u0006\u0000\u0000\u0085\u0086\u0007\n\u0000\u0000\u0086\u0087\u0007"+
		"\u0003\u0000\u0000\u0087\u000e\u0001\u0000\u0000\u0000\u0088\u0089\u0007"+
		"\u0006\u0000\u0000\u0089\u008a\u0007\u0003\u0000\u0000\u008a\u008b\u0007"+
		"\u000b\u0000\u0000\u008b\u008c\u0007\f\u0000\u0000\u008c\u008d\u0007\u0006"+
		"\u0000\u0000\u008d\u008e\u0007\r\u0000\u0000\u008e\u0010\u0001\u0000\u0000"+
		"\u0000\u008f\u0090\u0007\u0001\u0000\u0000\u0090\u0091\u0007\u0004\u0000"+
		"\u0000\u0091\u0092\u0007\n\u0000\u0000\u0092\u0012\u0001\u0000\u0000\u0000"+
		"\u0093\u0094\u0007\u0001\u0000\u0000\u0094\u0095\u0007\f\u0000\u0000\u0095"+
		"\u0096\u0007\f\u0000\u0000\u0096\u0097\u0007\u000e\u0000\u0000\u0097\u0014"+
		"\u0001\u0000\u0000\u0000\u0098\u0099\u0007\u000e\u0000\u0000\u0099\u009a"+
		"\u0007\f\u0000\u0000\u009a\u009b\u0007\f\u0000\u0000\u009b\u009c\u0007"+
		"\u0001\u0000\u0000\u009c\u0016\u0001\u0000\u0000\u0000\u009d\u009e\u0007"+
		"\n\u0000\u0000\u009e\u009f\u0007\b\u0000\u0000\u009f\u00a0\u0007\u0004"+
		"\u0000\u0000\u00a0\u00a1\u0007\u0007\u0000\u0000\u00a1\u0018\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a3\u0007\u000f\u0000\u0000\u00a3\u00a4\u0007\b\u0000"+
		"\u0000\u00a4\u00a5\u0007\u0006\u0000\u0000\u00a5\u00a6\u0007\u0001\u0000"+
		"\u0000\u00a6\u00a7\u0007\u0004\u0000\u0000\u00a7\u001a\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a9\u0007\u0000\u0000\u0000\u00a9\u00aa\u0007\u0002\u0000"+
		"\u0000\u00aa\u00ab\u0007\u0003\u0000\u0000\u00ab\u00ac\u0007\u0004\u0000"+
		"\u0000\u00ac\u001c\u0001\u0000\u0000\u0000\u00ad\u00ae\u0007\u0004\u0000"+
		"\u0000\u00ae\u00af\u0007\u0003\u0000\u0000\u00af\u00b0\u0007\u0002\u0000"+
		"\u0000\u00b0\u00b1\u0007\u0000\u0000\u0000\u00b1\u001e\u0001\u0000\u0000"+
		"\u0000\u00b2\u00b3\u0007\u0007\u0000\u0000\u00b3\u00b4\u0007\u0004\u0000"+
		"\u0000\u00b4\u00b5\u0007\u000f\u0000\u0000\u00b5 \u0001\u0000\u0000\u0000"+
		"\u00b6\u00b7\u0007\f\u0000\u0000\u00b7\u00b8\u0007\u0005\u0000\u0000\u00b8"+
		"\"\u0001\u0000\u0000\u0000\u00b9\u00ba\u0007\u0007\u0000\u0000\u00ba\u00bb"+
		"\u0007\f\u0000\u0000\u00bb\u00bc\u0007\n\u0000\u0000\u00bc$\u0001\u0000"+
		"\u0000\u0000\u00bd\u00be\u0005t\u0000\u0000\u00be\u00bf\u0007\t\u0000"+
		"\u0000\u00bf\u00c0\u0007\u0010\u0000\u0000\u00c0\u00c1\u0007\u0004\u0000"+
		"\u0000\u00c1&\u0001\u0000\u0000\u0000\u00c2\u00c3\u0007\u0011\u0000\u0000"+
		"\u00c3(\u0001\u0000\u0000\u0000\u00c4\u00ca\u0007\u0012\u0000\u0000\u00c5"+
		"\u00c9\u0003\'\u0013\u0000\u00c6\u00c9\u0005_\u0000\u0000\u00c7\u00c9"+
		"\u0003-\u0016\u0000\u00c8\u00c5\u0001\u0000\u0000\u0000\u00c8\u00c6\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c7\u0001\u0000\u0000\u0000\u00c9\u00cc\u0001"+
		"\u0000\u0000\u0000\u00ca\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cb\u0001"+
		"\u0000\u0000\u0000\u00cb*\u0001\u0000\u0000\u0000\u00cc\u00ca\u0001\u0000"+
		"\u0000\u0000\u00cd\u00d3\u0007\u0013\u0000\u0000\u00ce\u00d2\u0003\'\u0013"+
		"\u0000\u00cf\u00d2\u0005_\u0000\u0000\u00d0\u00d2\u0003-\u0016\u0000\u00d1"+
		"\u00ce\u0001\u0000\u0000\u0000\u00d1\u00cf\u0001\u0000\u0000\u0000\u00d1"+
		"\u00d0\u0001\u0000\u0000\u0000\u00d2\u00d5\u0001\u0000\u0000\u0000\u00d3"+
		"\u00d1\u0001\u0000\u0000\u0000\u00d3\u00d4\u0001\u0000\u0000\u0000\u00d4"+
		",\u0001\u0000\u0000\u0000\u00d5\u00d3\u0001\u0000\u0000\u0000\u00d6\u00d7"+
		"\u0007\u0014\u0000\u0000\u00d7.\u0001\u0000\u0000\u0000\u00d8\u00da\u0003"+
		"-\u0016\u0000\u00d9\u00d8\u0001\u0000\u0000\u0000\u00da\u00db\u0001\u0000"+
		"\u0000\u0000\u00db\u00d9\u0001\u0000\u0000\u0000\u00db\u00dc\u0001\u0000"+
		"\u0000\u0000\u00dc0\u0001\u0000\u0000\u0000\u00dd\u00de\u0005;\u0000\u0000"+
		"\u00de2\u0001\u0000\u0000\u0000\u00df\u00e0\u0005,\u0000\u0000\u00e04"+
		"\u0001\u0000\u0000\u0000\u00e1\u00e2\u0005<\u0000\u0000\u00e2\u00e3\u0005"+
		"-\u0000\u0000\u00e36\u0001\u0000\u0000\u0000\u00e4\u00e5\u0005(\u0000"+
		"\u0000\u00e58\u0001\u0000\u0000\u0000\u00e6\u00e7\u0005)\u0000\u0000\u00e7"+
		":\u0001\u0000\u0000\u0000\u00e8\u00e9\u0005{\u0000\u0000\u00e9<\u0001"+
		"\u0000\u0000\u0000\u00ea\u00eb\u0005}\u0000\u0000\u00eb>\u0001\u0000\u0000"+
		"\u0000\u00ec\u00ed\u0005+\u0000\u0000\u00ed@\u0001\u0000\u0000\u0000\u00ee"+
		"\u00ef\u0005-\u0000\u0000\u00efB\u0001\u0000\u0000\u0000\u00f0\u00f1\u0005"+
		"*\u0000\u0000\u00f1D\u0001\u0000\u0000\u0000\u00f2\u00f3\u0005/\u0000"+
		"\u0000\u00f3F\u0001\u0000\u0000\u0000\u00f4\u00f5\u0005~\u0000\u0000\u00f5"+
		"H\u0001\u0000\u0000\u0000\u00f6\u00f7\u0005=\u0000\u0000\u00f7J\u0001"+
		"\u0000\u0000\u0000\u00f8\u00f9\u0005<\u0000\u0000\u00f9L\u0001\u0000\u0000"+
		"\u0000\u00fa\u00fb\u0005<\u0000\u0000\u00fb\u00fc\u0005=\u0000\u0000\u00fc"+
		"N\u0001\u0000\u0000\u0000\u00fd\u00fe\u0005:\u0000\u0000\u00feP\u0001"+
		"\u0000\u0000\u0000\u00ff\u0100\u0005@\u0000\u0000\u0100R\u0001\u0000\u0000"+
		"\u0000\u0101\u0102\u0005.\u0000\u0000\u0102T\u0001\u0000\u0000\u0000\u0103"+
		"\u0104\u0005=\u0000\u0000\u0104\u0105\u0005>\u0000\u0000\u0105V\u0001"+
		"\u0000\u0000\u0000\u0106\u010e\u0005\"\u0000\u0000\u0107\u0108\u0005\\"+
		"\u0000\u0000\u0108\u010d\u0005\"\u0000\u0000\u0109\u010a\u0005\\\u0000"+
		"\u0000\u010a\u010d\u0003Y,\u0000\u010b\u010d\t\u0000\u0000\u0000\u010c"+
		"\u0107\u0001\u0000\u0000\u0000\u010c\u0109\u0001\u0000\u0000\u0000\u010c"+
		"\u010b\u0001\u0000\u0000\u0000\u010d\u0110\u0001\u0000\u0000\u0000\u010e"+
		"\u010f\u0001\u0000\u0000\u0000\u010e\u010c\u0001\u0000\u0000\u0000\u010f"+
		"\u0118\u0001\u0000\u0000\u0000\u0110\u010e\u0001\u0000\u0000\u0000\u0111"+
		"\u0112\u0005\"\u0000\u0000\u0112\u0119\u0006+\u0000\u0000\u0113\u0114"+
		"\u0003Y,\u0000\u0114\u0115\u0006+\u0001\u0000\u0115\u0119\u0001\u0000"+
		"\u0000\u0000\u0116\u0117\u0005\u0000\u0000\u0001\u0117\u0119\u0006+\u0002"+
		"\u0000\u0118\u0111\u0001\u0000\u0000\u0000\u0118\u0113\u0001\u0000\u0000"+
		"\u0000\u0118\u0116\u0001\u0000\u0000\u0000\u0119X\u0001\u0000\u0000\u0000"+
		"\u011a\u011c\u0005\r\u0000\u0000\u011b\u011a\u0001\u0000\u0000\u0000\u011b"+
		"\u011c\u0001\u0000\u0000\u0000\u011c\u011d\u0001\u0000\u0000\u0000\u011d"+
		"\u011e\u0005\n\u0000\u0000\u011eZ\u0001\u0000\u0000\u0000\u011f\u0120"+
		"\u0005-\u0000\u0000\u0120\u0121\u0005-\u0000\u0000\u0121\u0125\u0001\u0000"+
		"\u0000\u0000\u0122\u0124\t\u0000\u0000\u0000\u0123\u0122\u0001\u0000\u0000"+
		"\u0000\u0124\u0127\u0001\u0000\u0000\u0000\u0125\u0126\u0001\u0000\u0000"+
		"\u0000\u0125\u0123\u0001\u0000\u0000\u0000\u0126\u012a\u0001\u0000\u0000"+
		"\u0000\u0127\u0125\u0001\u0000\u0000\u0000\u0128\u012b\u0003Y,\u0000\u0129"+
		"\u012b\u0005\u0000\u0000\u0001\u012a\u0128\u0001\u0000\u0000\u0000\u012a"+
		"\u0129\u0001\u0000\u0000\u0000\u012b\u012c\u0001\u0000\u0000\u0000\u012c"+
		"\u012d\u0006-\u0003\u0000\u012d\\\u0001\u0000\u0000\u0000\u012e\u012f"+
		"\u0005(\u0000\u0000\u012f\u0130\u0005*\u0000\u0000\u0130\u0135\u0001\u0000"+
		"\u0000\u0000\u0131\u0134\u0003].\u0000\u0132\u0134\t\u0000\u0000\u0000"+
		"\u0133\u0131\u0001\u0000\u0000\u0000\u0133\u0132\u0001\u0000\u0000\u0000"+
		"\u0134\u0137\u0001\u0000\u0000\u0000\u0135\u0136\u0001\u0000\u0000\u0000"+
		"\u0135\u0133\u0001\u0000\u0000\u0000\u0136\u013e\u0001\u0000\u0000\u0000"+
		"\u0137\u0135\u0001\u0000\u0000\u0000\u0138\u0139\u0005*\u0000\u0000\u0139"+
		"\u013a\u0005)\u0000\u0000\u013a\u013b\u0001\u0000\u0000\u0000\u013b\u013f"+
		"\u0006.\u0004\u0000\u013c\u013d\u0005\u0000\u0000\u0001\u013d\u013f\u0006"+
		".\u0005\u0000\u013e\u0138\u0001\u0000\u0000\u0000\u013e\u013c\u0001\u0000"+
		"\u0000\u0000\u013f^\u0001\u0000\u0000\u0000\u0140\u0141\u0005*\u0000\u0000"+
		"\u0141\u0142\u0005)\u0000\u0000\u0142\u0143\u0001\u0000\u0000\u0000\u0143"+
		"\u0144\u0006/\u0006\u0000\u0144`\u0001\u0000\u0000\u0000\u0145\u0147\u0007"+
		"\u0015\u0000\u0000\u0146\u0145\u0001\u0000\u0000\u0000\u0147\u0148\u0001"+
		"\u0000\u0000\u0000\u0148\u0146\u0001\u0000\u0000\u0000\u0148\u0149\u0001"+
		"\u0000\u0000\u0000\u0149\u014a\u0001\u0000\u0000\u0000\u014a\u014b\u0006"+
		"0\u0003\u0000\u014bb\u0001\u0000\u0000\u0000\u014c\u014d\t\u0000\u0000"+
		"\u0000\u014d\u014e\u00061\u0007\u0000\u014ed\u0001\u0000\u0000\u0000\u0010"+
		"\u0000\u00c8\u00ca\u00d1\u00d3\u00db\u010c\u010e\u0118\u011b\u0125\u012a"+
		"\u0133\u0135\u013e\u0148\b\u0001+\u0000\u0001+\u0001\u0001+\u0002\u0006"+
		"\u0000\u0000\u0001.\u0003\u0001.\u0004\u0001/\u0005\u00011\u0006";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}