/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _OAUTH_H_RPCGEN
#define _OAUTH_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct request_authorization_information {
	char user_id[16];
};
typedef struct request_authorization_information request_authorization_information;

struct request_access_token_information {
	char user_id[16];
	char authorization_token[16];
	int auto_refresh;
};
typedef struct request_access_token_information request_access_token_information;

struct request_access_token_response {
	char access_token[16];
	char refresh_token[16];
	int valability;
};
typedef struct request_access_token_response request_access_token_response;

struct validate_delegated_action_information {
	char access_token[16];
	char *resource;
	char operation[8];
};
typedef struct validate_delegated_action_information validate_delegated_action_information;

struct approve_request_token_information {
	char access_token[16];
	int sign;
};
typedef struct approve_request_token_information approve_request_token_information;

struct approve_entry {
	char *resource;
	char permissions[16];
};
typedef struct approve_entry approve_entry;

#define OAUTH_PROG 123456789
#define OUATH_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define request_authorization 1
extern  char ** request_authorization_1(request_authorization_information *, CLIENT *);
extern  char ** request_authorization_1_svc(request_authorization_information *, struct svc_req *);
#define request_access_token 2
extern  request_access_token_response * request_access_token_1(request_access_token_information *, CLIENT *);
extern  request_access_token_response * request_access_token_1_svc(request_access_token_information *, struct svc_req *);
#define validate_delegated_action 3
extern  char ** validate_delegated_action_1(validate_delegated_action_information *, CLIENT *);
extern  char ** validate_delegated_action_1_svc(validate_delegated_action_information *, struct svc_req *);
#define approve_request_token 4
extern  approve_request_token_information * approve_request_token_1(approve_request_token_information *, CLIENT *);
extern  approve_request_token_information * approve_request_token_1_svc(approve_request_token_information *, struct svc_req *);
extern int oauth_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define request_authorization 1
extern  char ** request_authorization_1();
extern  char ** request_authorization_1_svc();
#define request_access_token 2
extern  request_access_token_response * request_access_token_1();
extern  request_access_token_response * request_access_token_1_svc();
#define validate_delegated_action 3
extern  char ** validate_delegated_action_1();
extern  char ** validate_delegated_action_1_svc();
#define approve_request_token 4
extern  approve_request_token_information * approve_request_token_1();
extern  approve_request_token_information * approve_request_token_1_svc();
extern int oauth_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_request_authorization_information (XDR *, request_authorization_information*);
extern  bool_t xdr_request_access_token_information (XDR *, request_access_token_information*);
extern  bool_t xdr_request_access_token_response (XDR *, request_access_token_response*);
extern  bool_t xdr_validate_delegated_action_information (XDR *, validate_delegated_action_information*);
extern  bool_t xdr_approve_request_token_information (XDR *, approve_request_token_information*);
extern  bool_t xdr_approve_entry (XDR *, approve_entry*);

#else /* K&R C */
extern bool_t xdr_request_authorization_information ();
extern bool_t xdr_request_access_token_information ();
extern bool_t xdr_request_access_token_response ();
extern bool_t xdr_validate_delegated_action_information ();
extern bool_t xdr_approve_request_token_information ();
extern bool_t xdr_approve_entry ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_OAUTH_H_RPCGEN */
